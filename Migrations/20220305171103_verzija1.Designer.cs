// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace app.Migrations
{
    [DbContext(typeof(SalonContext))]
    [Migration("20220305171103_verzija1")]
    partial class verzija1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Musterija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Musterija");
                });

            modelBuilder.Entity("Models.Radnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SalonID")
                        .HasColumnType("int");

                    b.Property<string>("Zanimanje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SalonID");

                    b.ToTable("Radnik");
                });

            modelBuilder.Entity("Models.Salon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Salon");
                });

            modelBuilder.Entity("Models.Termin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vreme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("musterijaID")
                        .HasColumnType("int");

                    b.Property<int?>("radnikID")
                        .HasColumnType("int");

                    b.Property<int?>("uslugaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("musterijaID");

                    b.HasIndex("radnikID");

                    b.HasIndex("uslugaID");

                    b.ToTable("Termin");
                });

            modelBuilder.Entity("Models.Usluga", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TipUsluge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Usluga");
                });

            modelBuilder.Entity("Models.Radnik", b =>
                {
                    b.HasOne("Models.Salon", null)
                        .WithMany("Radnici")
                        .HasForeignKey("SalonID");
                });

            modelBuilder.Entity("Models.Termin", b =>
                {
                    b.HasOne("Models.Musterija", "musterija")
                        .WithMany("Termini")
                        .HasForeignKey("musterijaID");

                    b.HasOne("Models.Radnik", "radnik")
                        .WithMany("Termini")
                        .HasForeignKey("radnikID");

                    b.HasOne("Models.Usluga", "usluga")
                        .WithMany("Termini")
                        .HasForeignKey("uslugaID");

                    b.Navigation("musterija");

                    b.Navigation("radnik");

                    b.Navigation("usluga");
                });

            modelBuilder.Entity("Models.Musterija", b =>
                {
                    b.Navigation("Termini");
                });

            modelBuilder.Entity("Models.Radnik", b =>
                {
                    b.Navigation("Termini");
                });

            modelBuilder.Entity("Models.Salon", b =>
                {
                    b.Navigation("Radnici");
                });

            modelBuilder.Entity("Models.Usluga", b =>
                {
                    b.Navigation("Termini");
                });
#pragma warning restore 612, 618
        }
    }
}
